@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IDeleteCategoryUseCase DeleteCategoryUseCase

<h3>Manage Categories</h3>
<br />

@if (showDeleteConfirmation)
{
    <div class="confirmation-dialog">
        <div class="modal fade show" style="display: block;">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Delete Confirmation</h5>
                        <button type="button" class="close" @onclick="() => showDeleteConfirmation = false">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete the category '@categoryToDelete.Name'?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" @onclick="EventCallback.Factory.Create(this, async () => await DeleteCategory())">Yes</button>
                        <button type="button" class="btn btn-secondary" @onclick="() => showDeleteConfirmation = false">No</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    </div>
}


@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Category Name</th>
                <th>Category Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td>
                        <button type="button" @onclick="@(() => EditCategory(category))" class="btn btn-link">Edit</button>
                        <button type="button" @onclick="@(() => ShowDeleteConfirmation(category))" class="btn btn-link">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br />
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>

@code {
    private List<Category> categories;
    private Category categoryToDelete;
    private bool showDeleteConfirmation;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }

    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.Id}");
    }

    private async Task DeleteCategory()
    {
        DeleteCategoryUseCase.Execute(categoryToDelete.Id);
        categories.Remove(categoryToDelete);
        showDeleteConfirmation = false;
    }

    private void ShowDeleteConfirmation(Category category)
    {
        categoryToDelete = category;
        showDeleteConfirmation = true;
    }

    private void LoadCategories()
    {
        categories = ViewCategoriesUseCase.Exacute()?.ToList();
    }
}
